plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.palantir.git-version' version '3.0.0'
}

group 'io.github.pesegato'
version gitVersion()

println("version : '${version}'")

//version = "0.1.0-SNAPSHOT-${new Date().format("yyyyMMdd-HHmmss")}"
ext {
    //jmonkeyengine_version = '3.4.0-stable'
    jmonkeyengine_version = '[3.6,)'
}

repositories {
    mavenCentral()
}

dependencies {
    //implementation fileTree(dir: 'lib', include: ['*.jar'])

    implementation "org.jmonkeyengine:jme3-core:$jmonkeyengine_version"
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'com.google.guava:guava:32.1.3-jre'
    implementation 'com.google.code.gson:gson:2.10.1'
    runtimeOnly 'ch.qos.logback:logback-classic:1.3.13'

}

signing {
    sign publishing.publications
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'GoldMonkey'
                description = 'XML and JSON Builder for dataset.'
                url = 'https://github.com/Pesegato/GoldMonkey/'
                inceptionYear = '2015'
                licenses {
                    license {
                        name = 'BSD 3-Clause License'
                        url = 'https://github.com/Pesegato/GoldMonkey/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'pesegato'
                        name = 'Pesegato Ameiurus Melas'
                        email = 'pesegato@outlook.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/pesegato/goldmonkey.git'
                    developerConnection = 'scm:git:ssh://git@github.com/pesegato/goldmonkey.git'
                    url = 'https://github.com/Pesegato/GoldMonkey/'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    withJavadocJar()
    withSourcesJar()
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava.doLast {
    def buildDate = new Date().format('yyyy-MM-dd HHmm')
    println "Writing ${rootProject.name}.build.date: " + buildDate
    destinationDirectory.file("${rootProject.name}.build.date").get().asFile.text = buildDate
    destinationDirectory.file("${rootProject.name}.build.version").get().asFile.text = "${version}"
}